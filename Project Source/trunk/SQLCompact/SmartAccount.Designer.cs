//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_BankRecord_Record", "Record", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLCompact.Record), "BankRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLCompact.BankRecord), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FixedAsset_Record", "Record", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQLCompact.Record), "FixedAsset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLCompact.FixedAsset), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ProjectHead_Head", "Head", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLCompact.Head), "ProjectHead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLCompact.ProjectHead), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_OpeningBalance_ProjectCategory", "ProjectHead", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQLCompact.ProjectHead), "OpeningBalance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLCompact.OpeningBalance), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ProjectHead_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLCompact.Project), "ProjectHead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLCompact.ProjectHead), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Record_ProjectCategory", "ProjectHead", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQLCompact.ProjectHead), "Record", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQLCompact.Record), true)]

#endregion

namespace SQLCompact
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankRecord> BankRecords
        {
            get
            {
                if ((_BankRecords == null))
                {
                    _BankRecords = base.CreateObjectSet<BankRecord>("BankRecords");
                }
                return _BankRecords;
            }
        }
        private ObjectSet<BankRecord> _BankRecords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FixedAsset> FixedAssets
        {
            get
            {
                if ((_FixedAssets == null))
                {
                    _FixedAssets = base.CreateObjectSet<FixedAsset>("FixedAssets");
                }
                return _FixedAssets;
            }
        }
        private ObjectSet<FixedAsset> _FixedAssets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Head> Heads
        {
            get
            {
                if ((_Heads == null))
                {
                    _Heads = base.CreateObjectSet<Head>("Heads");
                }
                return _Heads;
            }
        }
        private ObjectSet<Head> _Heads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OpeningBalance> OpeningBalances
        {
            get
            {
                if ((_OpeningBalances == null))
                {
                    _OpeningBalances = base.CreateObjectSet<OpeningBalance>("OpeningBalances");
                }
                return _OpeningBalances;
            }
        }
        private ObjectSet<OpeningBalance> _OpeningBalances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameter>("Parameters");
                }
                return _Parameters;
            }
        }
        private ObjectSet<Parameter> _Parameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectHead> ProjectHeads
        {
            get
            {
                if ((_ProjectHeads == null))
                {
                    _ProjectHeads = base.CreateObjectSet<ProjectHead>("ProjectHeads");
                }
                return _ProjectHeads;
            }
        }
        private ObjectSet<ProjectHead> _ProjectHeads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Record> Records
        {
            get
            {
                if ((_Records == null))
                {
                    _Records = base.CreateObjectSet<Record>("Records");
                }
                return _Records;
            }
        }
        private ObjectSet<Record> _Records;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankRecords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankRecords(BankRecord bankRecord)
        {
            base.AddObject("BankRecords", bankRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FixedAssets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFixedAssets(FixedAsset fixedAsset)
        {
            base.AddObject("FixedAssets", fixedAsset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Heads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHeads(Head head)
        {
            base.AddObject("Heads", head);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OpeningBalances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOpeningBalances(OpeningBalance openingBalance)
        {
            base.AddObject("OpeningBalances", openingBalance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameters(Parameter parameter)
        {
            base.AddObject("Parameters", parameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectHeads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectHeads(ProjectHead projectHead)
        {
            base.AddObject("ProjectHeads", projectHead);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Records EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecords(Record record)
        {
            base.AddObject("Records", record);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="BankRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankRecord object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="recordID">Initial value of the RecordID property.</param>
        public static BankRecord CreateBankRecord(global::System.Int32 id, global::System.Int32 recordID)
        {
            BankRecord bankRecord = new BankRecord();
            bankRecord.ID = id;
            bankRecord.RecordID = recordID;
            return bankRecord;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordID
        {
            get
            {
                return _RecordID;
            }
            set
            {
                OnRecordIDChanging(value);
                ReportPropertyChanging("RecordID");
                _RecordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordID");
                OnRecordIDChanged();
            }
        }
        private global::System.Int32 _RecordID;
        partial void OnRecordIDChanging(global::System.Int32 value);
        partial void OnRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChequeNo
        {
            get
            {
                return _ChequeNo;
            }
            set
            {
                OnChequeNoChanging(value);
                ReportPropertyChanging("ChequeNo");
                _ChequeNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChequeNo");
                OnChequeNoChanged();
            }
        }
        private global::System.String _ChequeNo;
        partial void OnChequeNoChanging(global::System.String value);
        partial void OnChequeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Branch
        {
            get
            {
                return _Branch;
            }
            set
            {
                OnBranchChanging(value);
                ReportPropertyChanging("Branch");
                _Branch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Branch");
                OnBranchChanged();
            }
        }
        private global::System.String _Branch;
        partial void OnBranchChanging(global::System.String value);
        partial void OnBranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChequeDate
        {
            get
            {
                return _ChequeDate;
            }
            set
            {
                OnChequeDateChanging(value);
                ReportPropertyChanging("ChequeDate");
                _ChequeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChequeDate");
                OnChequeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChequeDate;
        partial void OnChequeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChequeDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_BankRecord_Record", "Record")]
        public Record Record
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Record>("Model.FK_BankRecord_Record", "Record").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Record>("Model.FK_BankRecord_Record", "Record").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Record> RecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Record>("Model.FK_BankRecord_Record", "Record");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Record>("Model.FK_BankRecord_Record", "Record", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="FixedAsset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FixedAsset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FixedAsset object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static FixedAsset CreateFixedAsset(global::System.Int32 id)
        {
            FixedAsset fixedAsset = new FixedAsset();
            fixedAsset.ID = id;
            return fixedAsset;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DepreciationRate
        {
            get
            {
                return _DepreciationRate;
            }
            set
            {
                OnDepreciationRateChanging(value);
                ReportPropertyChanging("DepreciationRate");
                _DepreciationRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepreciationRate");
                OnDepreciationRateChanged();
            }
        }
        private Nullable<global::System.Double> _DepreciationRate;
        partial void OnDepreciationRateChanging(Nullable<global::System.Double> value);
        partial void OnDepreciationRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DepreciatedValue
        {
            get
            {
                return _DepreciatedValue;
            }
            set
            {
                OnDepreciatedValueChanging(value);
                ReportPropertyChanging("DepreciatedValue");
                _DepreciatedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepreciatedValue");
                OnDepreciatedValueChanged();
            }
        }
        private Nullable<global::System.Int32> _DepreciatedValue;
        partial void OnDepreciatedValueChanging(Nullable<global::System.Int32> value);
        partial void OnDepreciatedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepreciationType
        {
            get
            {
                return _DepreciationType;
            }
            set
            {
                OnDepreciationTypeChanging(value);
                ReportPropertyChanging("DepreciationType");
                _DepreciationType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepreciationType");
                OnDepreciationTypeChanged();
            }
        }
        private global::System.String _DepreciationType;
        partial void OnDepreciationTypeChanging(global::System.String value);
        partial void OnDepreciationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ByForceDisposed
        {
            get
            {
                return _ByForceDisposed;
            }
            set
            {
                OnByForceDisposedChanging(value);
                ReportPropertyChanging("ByForceDisposed");
                _ByForceDisposed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ByForceDisposed");
                OnByForceDisposedChanged();
            }
        }
        private Nullable<global::System.Boolean> _ByForceDisposed;
        partial void OnByForceDisposedChanging(Nullable<global::System.Boolean> value);
        partial void OnByForceDisposedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RecordID
        {
            get
            {
                return _RecordID;
            }
            set
            {
                OnRecordIDChanging(value);
                ReportPropertyChanging("RecordID");
                _RecordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordID");
                OnRecordIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RecordID;
        partial void OnRecordIDChanging(Nullable<global::System.Int32> value);
        partial void OnRecordIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FixedAsset_Record", "Record")]
        public Record Record
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Record>("Model.FK_FixedAsset_Record", "Record").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Record>("Model.FK_FixedAsset_Record", "Record").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Record> RecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Record>("Model.FK_FixedAsset_Record", "Record");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Record>("Model.FK_FixedAsset_Record", "Record", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Head")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Head : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Head object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Head CreateHead(global::System.Int32 id, global::System.String name, global::System.Boolean isActive, global::System.String type)
        {
            Head head = new Head();
            head.ID = id;
            head.Name = name;
            head.IsActive = isActive;
            head.Type = type;
            return head;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProjectHead_Head", "ProjectHead")]
        public EntityCollection<ProjectHead> ProjectHeads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectHead>("Model.FK_ProjectHead_Head", "ProjectHead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectHead>("Model.FK_ProjectHead_Head", "ProjectHead", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.String type)
        {
            Log log = new Log();
            log.ID = id;
            log.Type = type;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="OpeningBalance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OpeningBalance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OpeningBalance object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static OpeningBalance CreateOpeningBalance(global::System.Int32 id, global::System.Boolean isActive)
        {
            OpeningBalance openingBalance = new OpeningBalance();
            openingBalance.ID = id;
            openingBalance.IsActive = isActive;
            return openingBalance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectHeadID
        {
            get
            {
                return _ProjectHeadID;
            }
            set
            {
                OnProjectHeadIDChanging(value);
                ReportPropertyChanging("ProjectHeadID");
                _ProjectHeadID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectHeadID");
                OnProjectHeadIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectHeadID;
        partial void OnProjectHeadIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectHeadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private Nullable<global::System.Int32> _Balance;
        partial void OnBalanceChanging(Nullable<global::System.Int32> value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_OpeningBalance_ProjectCategory", "ProjectHead")]
        public ProjectHead ProjectHead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectHead>("Model.FK_OpeningBalance_ProjectCategory", "ProjectHead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectHead>("Model.FK_OpeningBalance_ProjectCategory", "ProjectHead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectHead> ProjectHeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectHead>("Model.FK_OpeningBalance_ProjectCategory", "ProjectHead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectHead>("Model.FK_OpeningBalance_ProjectCategory", "ProjectHead", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Parameter CreateParameter(global::System.Int32 id, global::System.String key, global::System.Boolean isActive)
        {
            Parameter parameter = new Parameter();
            parameter.ID = id;
            parameter.Key = key;
            parameter.IsActive = isActive;
            return parameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Project CreateProject(global::System.Int32 id, global::System.Boolean isActive, global::System.String name, global::System.DateTime createDate)
        {
            Project project = new Project();
            project.ID = id;
            project.IsActive = isActive;
            project.Name = name;
            project.CreateDate = createDate;
            return project;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProjectHead_Project", "ProjectHead")]
        public EntityCollection<ProjectHead> ProjectHeads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectHead>("Model.FK_ProjectHead_Project", "ProjectHead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectHead>("Model.FK_ProjectHead_Project", "ProjectHead", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ProjectHead")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectHead : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectHead object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="headID">Initial value of the HeadID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ProjectHead CreateProjectHead(global::System.Int32 id, global::System.Int32 projectID, global::System.Int32 headID, global::System.Boolean isActive)
        {
            ProjectHead projectHead = new ProjectHead();
            projectHead.ID = id;
            projectHead.ProjectID = projectID;
            projectHead.HeadID = headID;
            projectHead.IsActive = isActive;
            return projectHead;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HeadID
        {
            get
            {
                return _HeadID;
            }
            set
            {
                OnHeadIDChanging(value);
                ReportPropertyChanging("HeadID");
                _HeadID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeadID");
                OnHeadIDChanged();
            }
        }
        private global::System.Int32 _HeadID;
        partial void OnHeadIDChanging(global::System.Int32 value);
        partial void OnHeadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProjectHead_Head", "Head")]
        public Head Head
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Head>("Model.FK_ProjectHead_Head", "Head").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Head>("Model.FK_ProjectHead_Head", "Head").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Head> HeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Head>("Model.FK_ProjectHead_Head", "Head");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Head>("Model.FK_ProjectHead_Head", "Head", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_OpeningBalance_ProjectCategory", "OpeningBalance")]
        public EntityCollection<OpeningBalance> OpeningBalances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpeningBalance>("Model.FK_OpeningBalance_ProjectCategory", "OpeningBalance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpeningBalance>("Model.FK_OpeningBalance_ProjectCategory", "OpeningBalance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ProjectHead_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_ProjectHead_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_ProjectHead_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model.FK_ProjectHead_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Model.FK_ProjectHead_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Record_ProjectCategory", "Record")]
        public EntityCollection<Record> Records
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Record>("Model.FK_Record_ProjectCategory", "Record");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Record>("Model.FK_Record_ProjectCategory", "Record", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Record")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Record : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Record object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectHeadID">Initial value of the ProjectHeadID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="voucherType">Initial value of the VoucherType property.</param>
        /// <param name="debit">Initial value of the Debit property.</param>
        /// <param name="credit">Initial value of the Credit property.</param>
        /// <param name="ledgerType">Initial value of the LedgerType property.</param>
        /// <param name="voucherSerialNo">Initial value of the VoucherSerialNo property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Record CreateRecord(global::System.Int32 id, global::System.Int32 projectHeadID, global::System.DateTime date, global::System.String voucherType, global::System.Double debit, global::System.Double credit, global::System.String ledgerType, global::System.Int32 voucherSerialNo, global::System.Boolean isActive)
        {
            Record record = new Record();
            record.ID = id;
            record.ProjectHeadID = projectHeadID;
            record.Date = date;
            record.VoucherType = voucherType;
            record.Debit = debit;
            record.Credit = credit;
            record.LedgerType = ledgerType;
            record.VoucherSerialNo = voucherSerialNo;
            record.IsActive = isActive;
            return record;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectHeadID
        {
            get
            {
                return _ProjectHeadID;
            }
            set
            {
                OnProjectHeadIDChanging(value);
                ReportPropertyChanging("ProjectHeadID");
                _ProjectHeadID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectHeadID");
                OnProjectHeadIDChanged();
            }
        }
        private global::System.Int32 _ProjectHeadID;
        partial void OnProjectHeadIDChanging(global::System.Int32 value);
        partial void OnProjectHeadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VoucherType
        {
            get
            {
                return _VoucherType;
            }
            set
            {
                OnVoucherTypeChanging(value);
                ReportPropertyChanging("VoucherType");
                _VoucherType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VoucherType");
                OnVoucherTypeChanged();
            }
        }
        private global::System.String _VoucherType;
        partial void OnVoucherTypeChanging(global::System.String value);
        partial void OnVoucherTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Debit
        {
            get
            {
                return _Debit;
            }
            set
            {
                OnDebitChanging(value);
                ReportPropertyChanging("Debit");
                _Debit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Debit");
                OnDebitChanged();
            }
        }
        private global::System.Double _Debit;
        partial void OnDebitChanging(global::System.Double value);
        partial void OnDebitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Credit
        {
            get
            {
                return _Credit;
            }
            set
            {
                OnCreditChanging(value);
                ReportPropertyChanging("Credit");
                _Credit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Credit");
                OnCreditChanged();
            }
        }
        private global::System.Double _Credit;
        partial void OnCreditChanging(global::System.Double value);
        partial void OnCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Narration
        {
            get
            {
                return _Narration;
            }
            set
            {
                OnNarrationChanging(value);
                ReportPropertyChanging("Narration");
                _Narration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Narration");
                OnNarrationChanged();
            }
        }
        private global::System.String _Narration;
        partial void OnNarrationChanging(global::System.String value);
        partial void OnNarrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LedgerType
        {
            get
            {
                return _LedgerType;
            }
            set
            {
                OnLedgerTypeChanging(value);
                ReportPropertyChanging("LedgerType");
                _LedgerType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LedgerType");
                OnLedgerTypeChanged();
            }
        }
        private global::System.String _LedgerType;
        partial void OnLedgerTypeChanging(global::System.String value);
        partial void OnLedgerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoucherSerialNo
        {
            get
            {
                return _VoucherSerialNo;
            }
            set
            {
                OnVoucherSerialNoChanging(value);
                ReportPropertyChanging("VoucherSerialNo");
                _VoucherSerialNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoucherSerialNo");
                OnVoucherSerialNoChanged();
            }
        }
        private global::System.Int32 _VoucherSerialNo;
        partial void OnVoucherSerialNoChanging(global::System.Int32 value);
        partial void OnVoucherSerialNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_BankRecord_Record", "BankRecord")]
        public EntityCollection<BankRecord> BankRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BankRecord>("Model.FK_BankRecord_Record", "BankRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BankRecord>("Model.FK_BankRecord_Record", "BankRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FixedAsset_Record", "FixedAsset")]
        public EntityCollection<FixedAsset> FixedAssets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedAsset>("Model.FK_FixedAsset_Record", "FixedAsset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedAsset>("Model.FK_FixedAsset_Record", "FixedAsset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Record_ProjectCategory", "ProjectHead")]
        public ProjectHead ProjectHead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectHead>("Model.FK_Record_ProjectCategory", "ProjectHead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectHead>("Model.FK_Record_ProjectCategory", "ProjectHead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectHead> ProjectHeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectHead>("Model.FK_Record_ProjectCategory", "ProjectHead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectHead>("Model.FK_Record_ProjectCategory", "ProjectHead", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
